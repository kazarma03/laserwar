До 16.07 проект (код и вёрстка) переделывался на 80% два раза.

На 16.07 19:50
-Для всех форм
можно изменить: 
-1. поведение кнопок при наведении мыши. Нужно перерисовать иконки (изменить цвета) и при наведении менять иконки, а не подсвечивать кнопки фоном.
-2. переделать логику на MVP или MVVM(по заданию не требуется, оставим на потом если потребуется)
+3. сделать неактивными кнопки перехода между формами до загрузки Json объекта, переделать стиль для них

форма загрузки объекта JSON
___________________________
можно добавить:
-1. кнопку, скрывающую\отображающую объект JSON	
необходимые изменения:
+1. привязать свойство активности кнопки загрузка к полю и отключать данную кнопку после начала загрузки
 объекта JSON до окончательного вывода объекта на форму
2. написать стьль изменяющий вид неактивной кнопки загрузки( под вопросом)

форма звука
___________________________
можно добавить:
-1. третье состояние кнопки загрузки звукового файла - остановка (по заданию не требуется)
-2. вторую кнопку- приостановка загрузки звукового файла (по заданию не требуется, вероятно придётся полностью переделать загрузку файла)
-3. объем загруженных данных по каждому файлу
не получилось:
-1. реализовать остановку загрузки (по заданию не требуется, оставим на потом, вероятная причина - client.DownloadFileAsync)
-2. увеличить количество одновременно загружаемых файлов (оставим на потом)
необходимые изменения:
+1. запрограммировать логику элементов в колонке воспроизведение

Изменения 16.07
Полностью переделан класс SoundTable.
Благодаря реализации интерфейса INotifyPropertyChanged удалось уйти от необходимости постоянного обновления
dataGridSounds.Items.Refresh(), подвешивающего интерфейс из потоков загружающих файлы.
Благодаря перезагрузке методов:
-client.DownloadFileCompleted += new AsyncCompletedEventHandler((sender, e) => Completed(sender, e, ind));
-client.DownloadProgressChanged += new DownloadProgressChangedEventHandler((sender, e) => ProgressChanged(sender, e, ind, sw));
удалось реализовать обновление интерфейса из client.DownloadFileAsync.
class SoundTable - сильно разросся, были добавлены комментарии методов и полей.
На dataGridSounds в колонку загрузка файлов добавлен лейбл -" статус загрузки", контент без биндинга, Visibilityс биндингом.

Изменения 17.07
Рефакторинг xaml
Рефакторинг кода
Созданы стили MainButtonDownload, MainButtonSound, MainButtonGame. Основная задача: изменить их поведение, переопределить фон отключённых кнопок.
Полностью описана логика проигрывания звуковых файлов. Для обновления интерфейса во времы проигрывания был выбран вариант использования DispatcherTimer. Вариант не нравится, но работает.
Для проигрывания созданы методы:void PlaySound(int ind), timer_Tick(object sender, EventArgs e), void StopSound(). Предусмотрен вариант проверки проигрывания файла 
при повторной загрузке Json объекта и отключения проигрывания при необходимости.

Изменения 19.07
Созданы:
class GameTable -с полями для заполнения таблицы Игр
Метод static DateTime UnixTimeStampToDateTime(double unixTimeStamp) -для преобразования Unix времени
Организован переход по двойному нажатию на строке в таблице Игр к форме детализации игр
сlass DetailGameTable - с полями для заполнения таблицы Игр
class LabelDetailGameTable -с полем для привязки к Заголовку формы детализации игр
стиль GroupHeaderStyle- для организации группировки в таблице детализации игр
стиль dataGridDetail - для визуализации таблицы детализации игр
void Return_Click(object sender, RoutedEventArgs e)- для логики возвращения на таблицу игр
посредством методов void dataGridDetailGame_PreparingCellForEdit(object sender, System.Windows.Controls.DataGridPreparingCellForEditEventArgs e)
                  и void dataGridDetailGame_CellEditEnding(object sender, System.Windows.Controls.DataGridCellEditEndingEventArgs e)
реализовано обновление БД при редактировании данных в ячейке. 
В dataGridDetailGame_CellEditEnding предусмотрено преобразование точности Accuracy: в таблице текст + " %", в бд десятичное значение с разделителем в виде, все остальные символя автоматически удаляются.

